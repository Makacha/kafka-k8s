apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka-service
  namespace: kafka
spec:
  type: NodePort
  ports:
    - name: kafka-port
      port: 9092
      nodePort: 30192
      targetPort: 9092
  selector:
    app: kafka
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
  labels:
    type: local
  namespace: kafka
spec:
  storageClassName: my-storage
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/kafka
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
  namespace: kafka
spec:
  storageClassName: my-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
  name: kafka
  namespace: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      hostname: kafka
      containers:
      - env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-service:9092
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        name: kafka
        ports:
        - containerPort: 9092
        volumeMounts:
        - mountPath: "/var/lib/kafka/data"
          name: kafka-pv
      volumes:
      - name: kafka-pv
        persistentVolumeClaim:
          claimName: kafka-pvc
